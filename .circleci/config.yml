# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-test.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-test.txt
            pip install wheel
            pip install twine

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-test.txt" }}

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            nosetests

  deploy:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-test.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-test.txt
            pip install wheel
            pip install twine

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-test.txt" }}

      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify

      - run:
          name: init .pypirc
          command: |
            cat <<EOF > ~/.pypirc
            [distutils]
            index-servers=
                test
                pypi

            [test]
            repository: https://test.pypi.org/legacy/
            username: spotify_rebase
            password: $PYPI_PASSWORD

            [pypi]
            repository: https://upload.pypi.org/legacy/
            username: spotify_rebase
            password: $PYPI_PASSWORD
            EOF

      - run:
          name: create package
          command: |
            . venv/bin/activate
            python setup.py sdist bdist_wheel

      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload -r test dist/*

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
